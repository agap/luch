apply plugin: 'checkstyle'
apply plugin: 'jacoco-android'

checkstyle {
    toolVersion = '7.4'
}

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    classpath = files()
}

check.dependsOn 'checkstyle'

jacoco {
    toolVersion = "0.8.5"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

def jacocoFilter = [
    '**/R.class', '**/R$*.class', '**/BuildConfig.*',
    '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*',
    '**/*Exception*.*'
]

task customJacocoTestReport(type: JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task jacocoTestCoverageVerification(type: JacocoCoverageVerification, dependsOn: 'customJacocoTestReport') {
    sourceDirectories.setFrom(files(["$project.projectDir/src/main/java"]))
    classDirectories.setFrom(files([fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: jacocoFilter)]))
    executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))

    violationRules {
        failOnViolation = true
        rule {
            element = 'BUNDLE'

            limit {
                value = 'COVEREDRATIO'
                counter = 'INSTRUCTION'
                minimum = 0.8
            }
        }
    }
}

check.dependsOn 'jacocoTestCoverageVerification'